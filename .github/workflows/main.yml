name: Deploy Dialogflow CX Agent

on:
  push:
    branches: [ "DialogFlow" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      LOCATION_ID: global

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Install cxcli
        run: |
          curl -L -o cxcli.tar.gz "https://github.com/xavidop/dialogflow-cx-cli/releases/download/v1.239.0/cxcli_Linux_x86_64.tar.gz"
          tar -xzf cxcli.tar.gz
          sudo mv cxcli /usr/local/bin/
          cxcli version

      - name: Zip Dialogflow CX agent
        run: |
          zip -r agent.blob agent.json flows intents webhooks generativeSettings entityTypes

      - name: Verify agent.blob
        run: |
          test -f agent.blob || (echo "agent.blob not created"; exit 1)

      - name: Restore Dialogflow CX Agent
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          # Write service account key
          cat <<EOF > gcp-key.json
${{ secrets.GCP_SA_KEY }}
EOF

          # Create a new agent
          echo "ðŸ”¹ Creating a new Dialogflow CX agent..."
          AGENT_CREATE_OUTPUT=$(cxcli agent create "AutoAgent-$(date +%s)" \
            --project-id "$PROJECT_ID" \
            --location-id "global" \
            --locale "en" \
            --timezone "America/New_York" \
            --credentials gcp-key.json)

          # Extract the new agent ID from CLI output
          NEW_AGENT_ID=$(echo "$AGENT_CREATE_OUTPUT" | grep -oP 'projects/.+/agents/\K[0-9a-f-]+')
          echo "âœ… New agent created: $NEW_AGENT_ID"

          # Restore agent files into the new agent
          echo "ðŸ”¹ Restoring Dialogflow CX agent from agent.blob..."
          cxcli agent restore "$NEW_AGENT_ID" \
            --project-id "$PROJECT_ID" \
            --location-id "global" \
            --input agent.blob \
            --credentials gcp-key.json

          echo "âœ… Restore completed successfully."
